{"version":3,"sources":["components/Navigation/Navigation.jsx","components/AuthenticationForm/AuthenticationForm.jsx","components/LoginForm/LoginForm.jsx","App.jsx","index.js"],"names":["Navigation","className","to","activeClassName","exact","AuthenticationForm","request","status","statusText","resetStatus","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","successMessage","class","aria-label","onClick","errorMessage","handleChange","value","action","handleSubmit","event","a","preventDefault","onSubmit","htmlFor","type","id","name","onChange","target","placeholder","required","LoginForm","stateField","setStateField","App","setStatus","setStatusText","error","setError","requestBody","endpoint","fetch","method","headers","body","JSON","stringify","response","message","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3683bb83.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport 'bulma';\n\nexport const Navigation = () => (\n  <nav className=\"navbar\">\n    <NavLink\n      to=\"/auth\"\n      className=\"navbar-item is-tab\"\n      activeClassName=\"is-active\"\n      exact\n    >\n      Authenticate\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      className=\"navbar-item is-tab\"\n      activeClassName=\"is-active\"\n      exact\n    >\n      Login\n    </NavLink>\n  </nav>\n);\n","import React, { useState } from 'react';\n\nimport 'bulma';\n\nexport const AuthenticationForm = ({ request, status, statusText, resetStatus }) => {\n  const [ email, setEmail ] = useState('');\n  const [ password, setPassword ] = useState('');\n  const [ confirmPassword, setConfirmPassword ] = useState('');\n  const [ firstName, setFirstName ] = useState('');\n  const successMessage = (status === 201) &&\n  (<article class=\"message is-success\">\n    <div class=\"message-header\">\n      <p>Success</p>\n      <button\n        class=\"delete\"\n        aria-label=\"delete\"\n        onClick={resetStatus}\n      ></button>\n    </div>\n    <div class=\"message-body\">\n      You successfully registered\n    </div>\n  </article>);\n  const errorMessage = (status && status !== 201) &&\n  (<article class=\"message is-danger\">\n    <div class=\"message-header\">\n      <p>Danger</p>\n      <button\n        class=\"delete\"\n        aria-label=\"delete\"\n        onClick={resetStatus}\n      ></button>\n    </div>\n    <div class=\"message-body\">\n      An error occured {`Status: ${status}\\n Status text: ${statusText}`}\n    </div>\n  </article>);\n\n  const handleChange = (value, action) => {\n    action(value);\n  };\n\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setFirstName('');\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    await request({\n      email,\n      password,\n      confirmPassword,\n      firstName\n    }, 'register-user');\n    resetForm();\n  };\n\n  return (\n    <>\n      {successMessage}\n      {errorMessage}\n      <form\n        className=\"form\"\n        onSubmit={handleSubmit}\n      >\n        <h1 className=\"subtitle is-2\">Authentication</h1>\n        <label htmlFor=\"email\">Email: </label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          className=\"input\"\n          value={email}\n          onChange={({ target }) => {\n            handleChange(target.value, setEmail);\n          }}\n          placeholder=\"Email\"\n          required\n        ></input>\n        <label htmlFor=\"password\">Password: </label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          className=\"input\"\n          value={password}\n          onChange={({ target }) => {\n            handleChange(target.value, setPassword);\n          }}\n          placeholder=\"Password\"\n          required\n        >\n        </input>\n        <label htmlFor=\"confirmPassword\">Confirm Password: </label>\n        <input\n          type=\"password\"\n          id=\"confirmPassword\"\n          name=\"password\"\n          className=\"input\"\n          value={confirmPassword}\n          onChange={({ target }) => {\n            handleChange(target.value, setConfirmPassword);\n          }}\n          placeholder=\"Confirm Password\"\n          required\n        >\n        </input>\n        <label htmlFor=\"firstName\">First Name: </label>\n        <input\n          type=\"text\"\n          id=\"firstName\"\n          name=\"firstName\"\n          className=\"input\"\n          value={firstName}\n          onChange={({ target }) => {\n            handleChange(target.value, setFirstName);\n          }}\n          placeholder=\"First Name\"\n          required\n        >\n        </input>\n        <button\n          type=\"submit\"\n          className=\"button is-primary\"\n        >\n          Submit\n        </button>\n      </form>\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\nimport 'bulma';\n\nexport const LoginForm = ({ request, status, statusText, resetStatus }) => {\n  const [ email, setEmail ] = useState('');\n  const [ password, setPassword ] = useState('');\n  const successMessage = (status === 201) &&\n  (<article class=\"message is-success\">\n    <div class=\"message-header\">\n      <p>Success</p>\n      <button\n        class=\"delete\"\n        aria-label=\"delete\"\n        onClick={resetStatus}\n      ></button>\n    </div>\n    <div class=\"message-body\">\n      You successfully logged\n    </div>\n  </article>);\n  const errorMessage = (status && status !== 201) &&\n  (<article class=\"message is-danger\">\n    <div class=\"message-header\">\n      <p>Danger</p>\n      <button\n        class=\"delete\"\n        aria-label=\"delete\"\n        onClick={resetStatus}\n      ></button>\n    </div>\n    <div class=\"message-body\">\n      An error occured {`Status: ${status}\\n Status text: ${statusText}`}\n    </div>\n  </article>);\n\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleChange = (stateField, setStateField) => {\n    setStateField(stateField);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    await request({\n      email,\n      password\n    }, 'login');\n    resetForm();\n  };\n\n  return (\n    <>\n      {successMessage}\n      {errorMessage}\n      <form\n        className=\"form\"\n        onSubmit={handleSubmit}\n      >\n        <h1 className=\"subtitle is-2\">Login Form</h1>\n        <label htmlFor=\"email\">Email: </label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          className=\"input\"\n          value={email}\n          onChange={({ target }) => {\n            handleChange(target.value, setEmail);\n          }}\n          placeholder=\"Email\"\n          required\n        ></input>\n        <label htmlFor=\"password\">Password: </label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          className=\"input\"\n          value={password}\n          onChange={({ target }) => {\n            handleChange(target.value, setPassword);\n          }}\n          placeholder=\"Password\"\n          required\n        >\n        </input>\n        <button\n          type=\"submit\"\n          className=\"button is-primary\"\n        >\n          Submit\n        </button>\n      </form>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\nimport { AuthenticationForm } from './components/AuthenticationForm';\nimport { LoginForm } from './components/LoginForm';\n\nimport 'bulma';\nimport './App.scss';\n\nconst URL = \"http://161.35.157.168:4000/auth/\";\n\nexport const App = () => {\n  const [ status, setStatus ] = useState(null);\n  const [ statusText, setStatusText ] = useState('');\n  const [ error, setError ] = useState(null);\n\n  const resetError = () => {\n    setError(null);\n  };\n\n  const errorMessage = error && (\n    <article class=\"message is-danger\">\n    <div class=\"message-header\">\n      <p>Error</p>\n      <button\n        class=\"delete\"\n        aria-label=\"delete\"\n        onClick={resetError}\n      ></button>\n    </div>\n    <div class=\"message-body\">\n      An error occured {`${error}`}\n    </div>\n  </article>);\n\n  const resetStatus = () => {\n    setStatus(null);\n    setStatusText('');\n  };\n\n  const request = async (requestBody, endpoint) => {\n    try {\n      const response = await fetch(URL + endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n\n      setStatus(response.status);\n      setStatusText(response.statusText);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <>\n      <header>\n        <Navigation />\n      </header>\n      <section className=\"section\">\n        <div className=\"container\">\n          <h1 className=\"title is-2\">Authentication and Login Form</h1>\n          {errorMessage}\n          <Switch>\n            <Route path=\"/auth\">\n              <AuthenticationForm\n                request={request}\n                status={status}\n                statusText={statusText}\n                resetStatus={resetStatus}\n              />\n            </Route>\n            <Route path=\"/login\">\n              <LoginForm\n                request={request}\n                status={status}\n                statusText={statusText}\n                resetStatus={resetStatus}\n              />\n            </Route>\n\n            <Redirect path=\"/\" to=\"/login\"/>\n          </Switch>\n        </div>\n      </section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}