{"version":3,"sources":["components/AuthenticationForm/AuthenticationForm.jsx","components/LoginForm/LoginForm.jsx","App.jsx","index.js"],"names":["AuthenticationForm","request","status","statusText","resetStatus","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","successMessage","class","aria-label","onClick","errorMessage","handleChange","value","action","handleSubmit","event","a","preventDefault","className","onSubmit","htmlFor","type","id","name","onChange","target","placeholder","required","LoginForm","stateField","setStateField","URL","App","setStatus","setStatusText","requestBody","endpoint","console","log","fetch","method","headers","body","JSON","stringify","response","path","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5486cca.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport 'bulma';\nimport './AuthenticationForm.scss';\n\nexport const AuthenticationForm = ({ request, status, statusText, resetStatus }) => {\n  const [ email, setEmail ] = useState('');\n  const [ password, setPassword ] = useState('');\n  const [ confirmPassword, setConfirmPassword ] = useState('');\n  const [ firstName, setFirstName ] = useState('');\n  const successMessage = (status === 201) &&\n  (<article class=\"message is-success\">\n    <div class=\"message-header\">\n      <p>Success</p>\n      <button\n        class=\"delete\"\n        aria-label=\"delete\"\n        onClick={resetStatus}\n      ></button>\n    </div>\n    <div class=\"message-body\">\n      You successfully registered\n    </div>\n  </article>);\n  const errorMessage = (status && status !== 201) &&\n  (<article class=\"message is-danger\">\n    <div class=\"message-header\">\n      <p>Danger</p>\n      <button\n        class=\"delete\"\n        aria-label=\"delete\"\n        onClick={resetStatus}\n      ></button>\n    </div>\n    <div class=\"message-body\">\n      An error occured {`Status: ${status}\\n Status text: ${statusText}`}\n    </div>\n  </article>);\n\n  const handleChange = (value, action) => {\n    action(value);\n  };\n\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setFirstName('');\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    await request({\n      email,\n      password,\n      confirmPassword,\n      firstName\n    }, 'register-user');\n    resetForm();\n  };\n\n  return (\n    <>\n      {successMessage}\n      {errorMessage}\n      <form\n        className=\"form\"\n        onSubmit={handleSubmit}\n      >\n        <h1 className=\"subtitle is-2\">Authentication</h1>\n        <label htmlFor=\"email\">Email: </label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          className=\"input\"\n          value={email}\n          onChange={({ target }) => {\n            handleChange(target.value, setEmail);\n          }}\n          placeholder=\"Email\"\n          required\n        ></input>\n        <label htmlFor=\"password\">Password: </label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          className=\"input\"\n          value={password}\n          onChange={({ target }) => {\n            handleChange(target.value, setPassword);\n          }}\n          placeholder=\"Password\"\n          required\n        >\n        </input>\n        <label htmlFor=\"confirmPassword\">Confirm Password: </label>\n        <input\n          type=\"password\"\n          id=\"confirmPassword\"\n          name=\"password\"\n          className=\"input\"\n          value={confirmPassword}\n          onChange={({ target }) => {\n            handleChange(target.value, setConfirmPassword);\n          }}\n          placeholder=\"Confirm Password\"\n          required\n        >\n        </input>\n        <label htmlFor=\"firstName\">First Name: </label>\n        <input\n          type=\"text\"\n          id=\"firstName\"\n          name=\"firstName\"\n          className=\"input\"\n          value={firstName}\n          onChange={({ target }) => {\n            handleChange(target.value, setFirstName);\n          }}\n          placeholder=\"First Name\"\n          required\n        >\n        </input>\n        <button\n          type=\"submit\"\n          className=\"button is-primary\"\n        >\n          Submit\n        </button>\n      </form>\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\nimport 'bulma';\n\nexport const LoginForm = ({ request, status, statusText, resetStatus }) => {\n  const [ email, setEmail ] = useState('');\n  const [ password, setPassword ] = useState('');\n  const successMessage = (status === 201) &&\n  (<article class=\"message is-success\">\n    <div class=\"message-header\">\n      <p>Success</p>\n      <button\n        class=\"delete\"\n        aria-label=\"delete\"\n        onClick={resetStatus}\n      ></button>\n    </div>\n    <div class=\"message-body\">\n      You successfully logged\n    </div>\n  </article>);\n  const errorMessage = (status && status !== 201) &&\n  (<article class=\"message is-danger\">\n    <div class=\"message-header\">\n      <p>Danger</p>\n      <button\n        class=\"delete\"\n        aria-label=\"delete\"\n        onClick={resetStatus}\n      ></button>\n    </div>\n    <div class=\"message-body\">\n      An error occured {`Status: ${status}\\n Status text: ${statusText}`}\n    </div>\n  </article>);\n\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleChange = (stateField, setStateField) => {\n    setStateField(stateField);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    await request({\n      email,\n      password\n    }, 'login');\n    resetForm();\n  };\n\n  return (\n    <>\n      {successMessage}\n      {errorMessage}\n      <form\n        className=\"form\"\n        onSubmit={handleSubmit}\n      >\n        <h1 className=\"subtitle is-2\">Login Form</h1>\n        <label htmlFor=\"email\">Email: </label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          className=\"input\"\n          value={email}\n          onChange={({ target }) => {\n            handleChange(target.value, setEmail);\n          }}\n          placeholder=\"Email\"\n          required\n        ></input>\n        <label htmlFor=\"password\">Password: </label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          className=\"input\"\n          value={password}\n          onChange={({ target }) => {\n            handleChange(target.value, setPassword);\n          }}\n          placeholder=\"Password\"\n          required\n        >\n        </input>\n        <button\n          type=\"submit\"\n          className=\"button is-primary\"\n        >\n          Submit\n        </button>\n      </form>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { AuthenticationForm } from './components/AuthenticationForm';\nimport { LoginForm } from './components/LoginForm';\n\nimport 'bulma';\nimport './App.scss';\n\nconst URL = \"http://161.35.157.168:4000/auth/\";\n\nexport const App = () => {\n  const [ status, setStatus ] = useState(null);\n  const [ statusText, setStatusText ] = useState('');\n\n  const resetStatus = () => {\n    setStatus(null);\n    setStatusText('');\n  }\n\n  const request = async (requestBody, endpoint) => {\n    console.log(URL + endpoint);\n\n    const response = await fetch(URL + endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(requestBody)\n    });\n\n    setStatus(response.status);\n    setStatusText(response.statusText);\n  };\n\n  return (\n    <>\n      <section className=\"section\">\n        <div className=\"container\">\n          <h1 className=\"title is-2\">Authentication and Login Form</h1>\n          <Switch>\n            <Route path=\"/auth\">\n              <AuthenticationForm\n                request={request}\n                status={status}\n                statusText={statusText}\n                resetStatus={resetStatus}\n              />\n            </Route>\n            <Route path=\"/login\">\n              <LoginForm\n                request={request}\n                status={status}\n                statusText={statusText}\n                resetStatus={resetStatus}\n              />\n            </Route>\n\n            <Redirect path=\"/\" to=\"/login\"/>\n          </Switch>\n        </div>\n      </section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}